#!/bin/sh
# postinst script for indimail
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

prefix=@prefix@
indimaildir=@indimaildir@
mandir=@mandir@
libexecdir=@libexecdir@
qcount=5
qbase=${indimaildir}/queue
mbase=@basepath@
logdir=@logdir@
mysqlPrefix=@mysql_prefix@
servicedir=@servicedir@
sysconfdir=@sysconfdir@
####################################
noproxy=0
tcpserver_plugin=1
mysqlSocket=/var/run/mysqld/mysqld.sock

setperm()
{
	local user="$1"; shift
	local group="$1"; shift
	local mode="$1"; shift
	local file="$1"; shift
	/usr/sbin/dpkg-statoverride --list "$file" >/dev/null && return 0
	/usr/sbin/dpkg-statoverride --update --add "$user" "$group" "$mode" "$file"
}

fixperms()
{
#%attr(0555,root,qmail) @prefix@/bin/rsmtp
	if [ $# -eq 3 ] ; then # directory
		lin=$2
		file=$3
		if [ ! -d $file ] ; then
			return 0
		fi
	elif [ $# = 2 ] ; then # file
		lin=$1
		file=$2
		if [ ! -f $file ] ; then
			return 0
		fi
	fi
	perm=`echo $lin|cut -d\( -f2 | cut -d, -f1`
	perm_f1=`echo $perm | cut -c1`
	own=`echo $lin|cut -d\( -f2 | cut -d, -f2`
	grp=`echo $lin|cut -d\( -f2 | cut -d, -f3|cut -d\) -f1`
	if [ -f $file ] ; then
		if [ $perm_f1 -eq 0 ] ; then # perm_f1 is 4755, 0644
			/bin/chown $own:$grp $file
			/bin/chmod $perm $file
		else
			echo $file
			if [ -f /usr/sbin/dpkg-statoverride ] ; then
				setperm $own $grp $perm $file
			else
				/bin/chown $own:$grp $file
				/bin/chmod $perm $file
			fi
		fi
	elif [ -d $file ] ; then
		/bin/chown $own:$grp $file
		/bin/chmod $perm $file
	fi
}

ID=`id -u`
if [ $ID -ne 0 ] ; then
	echo "You are not root" >&2
	exit 1
fi
upgrade=0
case "$1" in
    configure)
		if [ " $2" = " " ] ; then
			echo "installing indimail @version@"
		else
			echo "upgrading to indimail $2"
			upgrade=1
		fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	exit 0
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

#
# We need to do this for debian. SIGH!!
#
if [ -f ${sysconfdir}/perm_list.indimail ] ; then
	echo "Fixing Permissions"
(
/bin/grep -v "^#" ${sysconfdir}/perm_list.indimail | while read line
do
	if [ " $line" = " " ] ; then
		continue
	fi
	fixperms $line
done
) > ${sysconfdir}/indimail-stat.override
fi

if [ $upgrade -eq 1 ] ; then # upgrade
	(
	if [ -f ${libexecdir}/iupgrade.sh ] ; then
		echo "Running Custom Upgrade Script for post upgrade"
		/bin/sh ${libexecdir}/iupgrade.sh post upgrade @version@ $* || true
	fi

	# refresh indimail services
	${prefix}/sbin/svctool --servicedir=${servicedir} --refreshsvc="$svc_list"

	# start indimail services after upgrade
	if [ -d /run ] ; then
		rundir=/run/svscan
	elif [ -d /var/run ] ; then
		rundir=/var/run/svscan
	else
		rundir=${servicedir}
	fi
	set +e
	for i in mrtg mysql.3306 indisrvr.4000 inlookup.infifo \
		qmail-poppass.106 qmail-logfifo proxy-imapd.4143 \
		proxy-imapd-ssl.9143 proxy-pop3d.4110 proxy-pop3d-ssl.9110
	do
		${prefix}/bin/svok ${servicedir}/$i >/dev/null 2>&1
		if [ $? -eq 0 -a -f ${rundir}/$i/.down ] ; then
			rm -f ${rundir}/$i/.down
			${prefix}/bin/svc -u ${servicedir}/$i
		fi
	done
	set -e

	#update VIRTUAL_PKG_LIB for smtp service
	indlib=`ls -d /usr/lib/*-linux-gnu/libindimail.so.*.*.* /usr/lib*/libindimail.so.*.*.* 2>/dev/null || true`
	for port in 25 465 587
	do
		if [ -n "$indlib" -a -f "$indlib" ] ; then
			if [ -f ${servicedir}/qmail-smtpd.$port/variables ] ; then
				echo $indlib > ${servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
			fi
		fi
	done
	if [ -n "$indlib" -a -f "$indlib" ] ; then
		if [ -f ${servicedir}/qmail-send.25/variables ] ; then
			echo $indlib > ${servicedir}/qmail-send.25/variables/VIRTUAL_PKG_LIB
		fi
	fi
	) >> /var/log/indimail-setup.log
	exit 0
fi
# Recreate ld.so links and cache
if [ ! "${prefix}" = "/usr" ] ; then
echo "recreating ld.so cache"
if [ -d /etc/ld.so.conf.d ] ; then
(
  if [ -d ${prefix}/lib64 ] ; then
    echo ${prefix}/lib64
  else
    echo ${prefix}/lib
  fi
) > /etc/ld.so.conf.d/indimail-`uname -m`.conf
fi
/sbin/ldconfig
fi

echo "Doing Post Install"
echo ""
echo "1. Configure ${logdir} for multilog"
echo "2. Configure ${servicedir}"
echo "3. Configure IndiMail settings"
echo "4. Configure ${sysconfdir}/indimail.cnf for MySQL service"
echo "5. Configure MySQL DB in ${indimaildir}/mysqldb/data"
echo "6. Configure indsrvr, inlookup, poppass services"
echo "7. Configure tcprules database for popass"
echo "8. Configure apparmor configuration"
echo "9. Configure default cron entries"
echo ""

if [ -x /bin/touch ] ; then
  TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
  TOUCH=/usr/bin/touch
else
  TOUCH=/bin/touch
fi
(
echo "Creating ${logdir}"
if [ $noproxy -eq 0 ] ; then
for i in proxyIMAP.4143 proxyPOP3.4110
do
  /bin/mkdir -p ${logdir}/$i
  /bin/chown -R qmaill:nofiles ${logdir}/$i
done
fi

if [ -d /run ] ; then
  logfifo="/run/indimail/logfifo"
  /bin/mkdir -p /run/indimail
  /bin/chown indimail:indimail /run/indimail
elif [ -d /var/run ] ; then
  logfifo="/var/run/indimail/logfifo"
  /bin/mkdir /var/run/indimail
  /bin/chown indimail:indimail /var/run/indimail
else
  logfifo="/tmp/logfifo"
fi

if [ -x /usr/bin/uname -o -x /bin/uname ] ; then
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || uname -n)
else
  defaultDomain=@defaultdomain@
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || echo ${defaultDomain})
fi

a_arch=`uname -m`
if [ $noproxy -eq 0 ] ; then
  if [ " $a_arch" = " x86_64" ] ; then
    imap_pop3_mem=104857600
    imapspop3_mem=104857600
  else
    imap_pop3_mem=52428800
    imapspop3_mem=52428800
  fi
  ${prefix}/sbin/svctool --imap=4143 --servicedir=$servicedir --localip=0 \
	  --maxdaemons=40 --maxperip=25 --infifo=infifo \
	  --memory=$imap_pop3_mem --proxy=143 --starttls
  ${prefix}/sbin/svctool --imap=9143 --servicedir=$servicedir --localip=0 \
	  --maxdaemons=40 --maxperip=25 --infifo=infifo \
	  --memory=$imapspop3_mem --proxy=143 --ssl
  ${prefix}/sbin/svctool --pop3=4110 --servicedir=$servicedir --localip=0 \
	  --maxdaemons=40 --maxperip=25 --infifo=infifo \
	  --memory=$imap_pop3_mem --proxy=110 --starttls
  ${prefix}/sbin/svctool --pop3=9110 --servicedir=$servicedir --localip=0 \
	  --maxdaemons=40 --maxperip=25 --infifo=infifo \
	  --memory=$imapspop3_mem --proxy=110 --ssl

  # add courier-imap auth module authindi
  set +e
  echo "adding authindi as Proxy IMAP/POP3 auth module"
  for i in `ls -d ${servicedir}/proxy-pop3d* ${servicedir}/proxy-imapd*`
  do
    if [ -s $i/variables/IMAPMODULES ] ; then
      grep authindi $i/variables/IMAPMODULES > /dev/null
      if [ $? -ne 0 ] ; then
        AUTHM="`cat $i/variables/IMAPMODULES` authindi"
        echo $AUTHM > $i/variables/IMAPMODULES
      fi
    fi
  done
  set -e
fi

# add checkpassword auth module vchkpass
set +e
echo "adding vchkpass as SMTP auth module"
for i in 465 587
do
  if [ -s ${servicedir}/qmail-smtpd.$i/variables/AUTHMODULES ] ; then
    grep vchkpass ${servicedir}/qmail-smtpd.$i/variables/AUTHMODULES > /dev/null
    if [ $? -ne 0 ] ; then
      AUTHM="`cat ${servicedir}/qmail-smtpd.$i/variables/AUTHMODULES` /usr/sbin/vchkpass"
      echo $AUTHM > ${servicedir}/qmail-smtpd.$i/variables/AUTHMODULES
    fi
  fi
done
set -e

# add courier-imap auth module authindi
set +e
echo "adding authindi as IMAP/POP3 auth module"
for i in `ls -d ${servicedir}/qmail-pop3d* ${servicedir}/qmail-imapd*`
do
  if [ -s $i/variables/IMAPMODULES ] ; then
    grep authindi $i/variables/IMAPMODULES > /dev/null
    if [ $? -ne 0 ] ; then
      AUTHM="`cat $i/variables/IMAPMODULES` authindi"
      echo $AUTHM > $i/variables/IMAPMODULES
    fi
  fi
done
set -e

# fifolog service
${prefix}/sbin/svctool --fifologger=$logfifo --servicedir=${servicedir}

# mrtg service
if [ -x /usr/bin/mrtg ] ; then
	${prefix}/sbin/svctool --mrtg=/var/www/html/mailmrtg --servicedir=${servicedir}
fi

echo "Creating default indimail mysql config indimail.cnf"
${prefix}/sbin/svctool --config=indimail --mysqlhost=localhost --mysqluser=indimail \
  --mysqlpass=ssh-1.5- --mysqlsocket=${mysqlSocket}

echo "Creating Database/Service for MySQL"
# MySQL Config Creation
if [ -x ${mysqlPrefix}/libexec/mysqld -o -x ${mysqlPrefix}/sbin/mysqld ] ; then
  error=`ps -e|grep mysqld|grep -v grep|wc -l`
  ${prefix}/sbin/svctool --config=mysql --mysqlPrefix=${mysqlPrefix} --mysqlsocket=${mysqlSocket} \
    --databasedir=${indimaildir}/mysqldb
  # MySQL Database Creation
  ${prefix}/sbin/svctool --config=mysqldb --mysqlPrefix=${mysqlPrefix} \
    --databasedir=${indimaildir}/mysqldb --base_path=${mbase} --mysqlsocket="${mysqlSocket}".tmp
  # MySQL Supervise creation
  ${prefix}/sbin/svctool --mysql=3306 --servicedir=${servicedir} --mysqlPrefix=${mysqlPrefix} \
    --databasedir=${indimaildir}/mysqldb --config=${sysconfdir}/indimail.cnf
  if [ ! -f ${indimaildir}/mysqldb/data/indimail/indimail.frm -a ! -f ${indimaildir}/mysqldb/data/indimail/indimail.ibd ] ; then
    error=1
  fi
  if [ $error -gt 0 ] ; then
    echo "Disabling mysqld service"
    $TOUCH ${servicedir}/mysql.3306/down
  fi
else
  echo "WARNING!!! Did not find mysqld in ${mysqlPrefix}/{libexec,sbin}. Skipping MySQL configuration" 1>&2
fi

echo "apparmor config"
# MySQL apparmor
if [ -x /etc/init.d/apparmor ] ; then
 if [ -f ${sysconfdir}/apparmor.d/local/usr.sbin.mysqld -a -d /etc/apparmor.d/local ] ; then
   cp ${sysconfdir}/apparmor.d/local/usr.sbin.mysqld /etc/apparmor.d/local
 fi
 if [ -f /etc/apparmor.d/local/usr.sbin.mysqld ] ; then
   echo "Reloading apparmor profiles..."
   /usr/sbin/service apparmor reload || true
 else
   echo "Shutting down apparmor..."
   /usr/sbin/service apparmor stop || true
   /usr/sbin/service apparmor teardown || true
 fi
fi

echo "Configuring indimail daemons indisrvr"
# IndiMail Daemons
${prefix}/sbin/svctool --indisrvr=4000 --servicedir=$servicedir \
	--localip=0 --maxdaemons=40 --maxperip=25 --avguserquota=2097152 \
	--certfile=${sysconfdir}/certs/servercert.pem --ssl \
	--hardquota=52428800 --base_path=${mbase}
${prefix}/sbin/svctool --inlookup=infifo --servicedir=$servicedir \
	--cntrldir=control --threads=5 --activeDays=60 --password-cache --use-btree --max-btree-count=10000

echo "Configuring poppass"
if [ " $a_arch" = " x86_64" ] ; then
  poppass_mem=104857600
else
  poppass_mem=52428800
fi
${prefix}/sbin/svctool --poppass=106 --localip=0 --maxdaemons=40 --maxperip=25 \
	--memory=$poppass_mem --certfile=${sysconfdir}/certs/servercert.pem --ssl \
	--setpassword=${prefix}/sbin/vsetpass --servicedir=$servicedir

echo "Creating default indimail tcp access control files"
# rebuild cdb
for j in `/bin/ls ${sysconfdir}/tcp/tcp.poppass 2>/dev/null`
do
	t1=`date +'%s' -r $j`
	if [ -f $j.cdb ] ; then
		t2=`date +'%s' -r $j.cdb`
	else
		t2=0
	fi
	if [ $t1 -gt $t2 ] ; then
		echo "Creating CDB $j.cdb"
		${prefix}/bin/tcprules $j.cdb $j.tmp < $j && /bin/chmod 664 $j.cdb \
			&& /bin/chown indimail:indimail $j.cdb
	fi
done

#update VIRTUAL_PKG_LIB for smtp service
echo "Updating VIRTUAL_PKG_LIB env variable for SMTP and delivery"
indlib=`ls -d /usr/lib/*-linux-gnu/libindimail.so.*.*.* /usr/lib*/libindimail.so.*.*.* 2>/dev/null || true`
for port in 25 465 587
do
  if [ -n "$indlib" -a -f "$indlib" ] ; then
    if [ -f ${servicedir}/qmail-smtpd.$port/variables ] ; then
      echo $indlib > ${servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
    fi
  fi
done
if [ -n "$indlib" -a -f "$indlib" ] ; then
  if [ -f ${servicedir}/qmail-send.25/variables ] ; then
    echo $indlib > ${servicedir}/qmail-send.25/variables/VIRTUAL_PKG_LIB
  fi
fi

echo "Turning off automatic refresh"
# turn off automatic refresh for services during first time installation
svc_list=""
for i in mrtg mysql.3306 indisrvr.4000 inlookup.infifo \
qmail-poppass.106 qmail-logfifo
do
  svc_list="$svc_list ${servicedir}/$i"
  # save variables
  ${prefix}/sbin/svctool --servicedir=${servicedir} --service-name=$i \
    --export-variables=${servicedir}/$i/variables/.variables  --force
done

if [ $noproxy -eq 0 ] ; then
for i in proxy-imapd.4143 proxy-imapd-ssl.9143 \
  proxy-pop3d.4110 proxy-pop3d-ssl.9110
do
  svc_list="$svc_list ${servicedir}/$i"
  ${prefix}/sbin/svctool --servicedir=${servicedir} --service-name=$i \
    --export-variables=${servicedir}/$i/variables/.variables  --force
done
fi
${prefix}/sbin/svctool --servicedir=${servicedir} --autorefresh="0 $svc_list"
${prefix}/sbin/svctool --fixsharedlibs

if [ -f ${libexecdir}/iupgrade.sh ] ; then
  echo "Running Custom Installation Script for post install"
  /bin/sh ${libexecdir}/iupgrade.sh post install @version@ $*
fi
) >> /var/log/indimail-setup.log 2>&1

if [ -f /etc/init/svscan.conf -o -f /etc/event.d/svscan ] ; then
	echo "1. Execute /sbin/initctl emit qmailstart to start services"
	count=1
elif [ -f /etc/systemd/system/multi-user.target.wants/svscan.service ] ; then
	echo "1. Execute /bin/systemctl start svscan to start services"
	count=1
else
	echo "1. Execute ${prefix}/sbin/initsvc -on"
	echo "2. Execute /sbin/init q to start services"
	count=2
fi
echo "   You can also use the 'service' command to start indimail"
echo "   sudo service indimail start"
count=`expr $count + 1`
echo "$count. If you want to use IndiMail to manage MySQL startup, remove"
echo "   ${servicedir}/mysql.3306/down"
count=`expr $count + 1`
echo "$count. Change your default domain in ${sysconfdir}/control/defaultdomain"
count=`expr $count + 1`
echo "$count. You can optionally run the following command to verify installation"
echo "   sudo ${prefix}/sbin/svctool --check-install --servicedir=${servicedir} \\"
echo "       --qbase=${qbase} --qcount=${qcount} --qstart=1"
if [ ! -f ${sysconfdir}/certs/servercert.pem ] ; then
count=`expr $count + 1`
echo "$count. You need to create CERTS for STARTTLS."
echo "   Run the following command to create Certificate for TLS/SSL"
echo "   ${prefix}/sbin/svctool --config=cert --postmaster=postmaster@${default_domain} --common_name=${default_domain}"
fi
echo
echo "Check /var/log/indimail-setup.log for the detailed installation log!!!"

exit 0
