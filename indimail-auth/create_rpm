#!/bin/sh
version=$(head -1 conf-version)
pam_multi_version=$(cat ../pam-multi-x/conf-version)
nssd_version=$(cat ../nssd-x/conf-version)

get_tar_files()
{
(
for i in `grep "^Source" indimail-auth/indimail-auth.spec.in | grep -v Source0 | awk '{print $2}' | grep "\.tar"`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/indimail-auth/g' \
	-e "s/%{version}/$version/g" \
	-e "s/%{pam_multi_version}/$pam_multi_version/g" \
	-e "s/%{nssd_version}/$nssd_version/g"
}

get_non_tar_files()
{
(
for i in `grep "^Source" $1 | grep -v "\.tar" | awk '{print $2}'`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/indimail-auth/g' \
	-e "s/%{version}/$version/g" \
	-e "s/%{pam_multi_version}/$pam_multi_version/g" \
	-e "s/%{nssd_version}/$nssd_version/g"
}

get_dirname()
{
	echo $1 | sed \
		-e 's}.tar.gz}}g' \
		-e 's}.tar.bz2}}g' \
		-e 's}.tar.xz}}g'
}

if [ -f /etc/debian_version ] ; then
	echo "you can't do rpmbuild on an insane system" 1>&2
	exit 1
fi

verbose=0
while test $# -gt 0; do
    case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
    *) optarg=
	;;
    esac

    case "$1" in
    --verbose)
	verbose=1
    ;;
    *)
    echo "invalid option [$1]"
    read key
    usage 1
    ;;
    esac

    shift
done

if test -f $HOME/.rpmmacros
then
	topdir=`grep ^%_topdir $HOME/.rpmmacros | awk '{print $2}'`
	if test -n "$topdir"
	then
		rpmbuild=$topdir
	else
		rpmbuild=$HOME/rpmbuild
	fi
else
	rpmbuild=$HOME/rpmbuild
fi
copy_src=0
echo -n "Copy Source Files - "
read key
if [ " $key" = " y" -o " $key" = " Y" ] ; then
	copy_src=1
fi
make -s indimail-auth.spec
if [ $? -ne 0 ] ; then
	echo "make failed" 1>&2
	exit 0
fi
if [ $copy_src -eq 1 ] ; then
	if [ -d ../stage ] ; then
		/bin/rm -rf ../stage
	fi
	mkdir ../stage
	cd .. # /usr/local/src/indimail-virtualdomains
	list=`get_tar_files`
	for i in $list
	do
		dir=`echo $i | sed -e 's{-[0-9].*tar.gz{{g'`
		echo "Versioning $dir"
		if [ ! -d $dir-x ] ; then
			echo "$dir-x: No such file or directory" 1>&2
			exit 1
		fi
		case "$dir" in
			nssd)
			package_version=$nssd_version
			;;
			pam-multi)
			package_version=$pam_multi_version
			;;
		esac
		/bin/cp -rp "$dir"-x stage/$dir-"$package_version"
		cd stage/$dir-"$package_version" # stage/package
		echo "Cleaning $dir-$package_version"
		make -s clean > /dev/null
		make -s distclean > /dev/null
		/bin/rm -rf autom4te.cache .deps
		cd .. # stage
		echo "Archiving "$dir"-"$package_version".tar.gz in `pwd`"
		tar \
			--exclude=""$dir"-"$package_version"/.git" \
			--exclude=""$dir"-"$package_version"/debian"  \
			--exclude=""$dir"-"$package_version"/RCS" \
			-cf - "$dir"-"$package_version" \
			| gzip -c > $rpmbuild/SOURCES/"$dir"-"$package_version".tar.gz
		SRC="$rpmbuild/SOURCES/"$dir"-"$package_version".tar.gz $SRC"
		cd .. # /usr/local/src/indimail-virtualdomains
	done
	echo "Copying permissions files and rpmlintrc"
	for i in `get_non_tar_files indimail-auth/indimail-auth.spec`
	do
		echo "/bin/cp -p stage/indimail-auth/$i $rpmbuild/SOURCES"
		/bin/cp -p stage/indimail-auth/$i $rpmbuild/SOURCES
		SRC="$rpmbuild/SOURCES/$i $SRC"
	done
	echo "Clearing stage directory"
	/bin/rm -rf stage
else
	cd .. # /usr/local/src/indimail-virtualdomains
fi

echo "Preparing indimail-auth"
dist=`uname -r |cut -d . -f4`
if [ $# -gt 0 ] ; then
	release=$1
else
	if [ -f /usr/sbin/nssd ] ; then
		ndist=$(rpm -qf /usr/sbin/nssd|cut -d- -f4|cut -d. -f3)
		if [ " $dist" = " $ndist" ] ; then
			nversion=$(rpm -qf /usr/sbin/nssd|cut -d- -f3)
			if [ "$nversion" = "$version" ] ; then
				release=$(rpm -qf /usr/sbin/nssd | cut -d- -f4 | cut -d. -f2)
				release=$(expr $release + 1)
			else
				release=1
			fi
		else
				echo 2
			release=1
		fi
	else
		release=1
	fi
fi
echo -n "Build RPM for indimail-auth-"$version"-1."$release" (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	tmprel=`cat indimail-auth/conf-release 2>/dev/null`
	if [ -z "$temprel" -o ! " $tmprel" = " 1.$release" ] ; then
		echo 1.$release > indimail-auth/conf-release
		cd indimail-auth
		make -s indimail-auth.spec
		cp indimail-auth.spec /tmp
		cd debian
		make
		cd ../..
	else
		cp indimail-auth/indimail-auth.spec /tmp
	fi
	if [ $verbose -eq 0 ] ; then
		echo "rpmbuild -ba --clean --quiet /tmp/indimail-auth.spec"
		rpmbuild -ba --clean --quiet /tmp/indimail-auth.spec
	else
		echo "rpmbuild -ba --clean /tmp/indimail-auth.spec"
		rpmbuild -ba --clean /tmp/indimail-auth.spec
	fi
	if [ $? -eq 0 ] ; then
		/bin/rm -f /tmp/indimail-auth.spec
		build_arch=`rpmbuild --showrc|grep "^build arch" | awk '{print $4}'`
		rpm --addsign $rpmbuild/RPMS/$build_arch/indimail-auth-"$version"-"1.$release".$dist.$build_arch.rpm
		rpm --addsign $rpmbuild/SRPMS/indimail-auth-"$version"-"1.$release".$dist.src.rpm
		echo -n "RPM lint for indimail-auth-"$version"-1."$release" (Y/N) - "
		read key
		if [ " $key" = " Y" -o " $key" = " y" ] ; then
			(
			echo indimail-auth
			rpmlint $rpmbuild/RPMS/$build_arch/indimail-auth-"$version"-"1.$release".$dist.$build_arch.rpm
			echo ------------------------
			echo indimail-auth-"$version"-"1.$release".$dist.src.rpm
			rpmlint $rpmbuild/SRPMS/indimail-auth-"$version"-"1.$release".$dist.src.rpm
			echo ------------------------
			) 2>&1 | less
		fi
	else
		/bin/rm -f /tmp/indimail-auth.spec
	fi
fi
if [ $copy_src -eq 1 ] ; then
	echo -n "Remove Source (Y/N) - "
	read key
	if [ " $key" = " Y" -o " $key" = " y" ] ; then
		for i in $SRC
		do
			echo "/bin/rm -f $i"
			/bin/rm -f $i
		done
	fi
fi
