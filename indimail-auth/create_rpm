#!/bin/sh
version=$(head -1 conf-version)
pam_multi_version=$(cat ../pam-multi-x/conf-version)
nssd_version=$(cat ../nssd-x/conf-version)

get_tar_files()
{
(
for i in `grep "^Source" indimail-auth/indimail-auth.spec.in | grep -v Source0 | awk '{print $2}' | grep "\.tar"`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/indimail-auth/g' \
	-e "s/%{version}/$version/g" \
	-e "s/%{pam_multi_version}/$pam_multi_version/g" \
	-e "s/%{nssd_version}/$nssd_version/g"
}

get_non_tar_files()
{
(
for i in `grep "^Source" $1 | grep -v "\.tar" | awk '{print $2}'`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/indimail-auth/g' \
	-e "s/%{version}/$version/g" \
	-e "s/%{pam_multi_version}/$pam_multi_version/g" \
	-e "s/%{nssd_version}/$nssd_version/g"
}

get_dirname()
{
	echo $1 | sed \
		-e 's}.tar.gz}}g' \
		-e 's}.tar.bz2}}g' \
		-e 's}.tar.xz}}g'
}

if test -f $HOME/.rpmmacros
then
	topdir=`grep ^%_topdir $HOME/.rpmmacros | awk '{print $2}'`
	if test -n "$topdir"
	then
		rpmbuild=$topdir
	else
		rpmbuild=$HOME/rpmbuild
	fi
else
	rpmbuild=$HOME/rpmbuild
fi

make -s indimail-auth.spec
if [ $? -ne 0 ] ; then
	echo "make failed" 1>&2
	exit 0
fi
if [ -d ../stage ] ; then
	/bin/rm -rf ../stage
fi
mkdir ../stage
cd ..
list=`get_tar_files`
for i in $list
do
	case "$i" in
		nssd-"$nssd_version".tar.gz)
		if [ ! -d nssd-x ] ; then
			echo "$i: No such file or directory" 1>&2
			exit 1
		fi
		echo "Versioning nssd-"$nssd_version".tar.gz"
		/bin/cp -rp nssd-x stage/nssd-"$nssd_version"
		cd stage/nssd-"$nssd_version"
		echo "Cleaning nssd-$nssd_version"
		make -s clean > /dev/null
		make -s distclean > /dev/null
		/bin/rm -rf autom4te.cache .deps
		cd ../..
		;;
		pam-multi-"$pam_multi_version".tar.gz)
		if [ ! -d pam-multi-x ] ; then
			echo "$i: No such file or directory" 1>&2
			exit 1
		fi
		echo "Versioning pam-multi-"$pam_multi_version".tar.gz"
		/bin/cp -rp pam-multi-x stage/pam-multi-"$pam_multi_version"
		cd stage/pam-multi-"$pam_multi_version"
		echo "Cleaning pam-multi-$pam_multi_version"
		make -s clean > /dev/null
		make -s distclean > /dev/null
		/bin/rm -rf autom4te.cache .deps
		cd ../..
		;;
	esac
	do_archive="gz"
	dir=`get_dirname $i`
	case "$dir" in
		"nssd-$nssd_version"|"pam-multi-$pam_multi_version")
		;;
		*)
		/bin/cp -rp $dir stage
		;;
	esac
	case "$dir" in
		"nssd-$nssd_version"|"pam-multi-$pam_multi_version")
		case "$do_archive" in
			gz)
				cd stage
				echo "Archiving $dir.tar.gz in `pwd`"
				tar \
				--exclude="$dir/.git" \
				--exclude="$dir/debian"  \
				--exclude="$dir/RCS" \
				-cf - $dir \
				| gzip -c > $rpmbuild/SOURCES/$dir.tar.gz
				SRC="$rpmbuild/SOURCES/$dir.tar.gz $SRC"
				cd ..
				;;
			bz2)
				cd stage
				echo "Archiving $dir.tar.bz2 in `pwd`"
				tar \
				--exclude="$dir/.git" \
				--exclude="$dir/debian"  \
				--exclude="$dir/RCS" \
				-cf - $dir \
				| bzip2 -c > $rpmbuild/SOURCES/$dir.tar.bz2
				SRC="$rpmbuild/SOURCES/$dir.tar.bz2 $SRC"
				cd ..
				;;
			xz)
				cd stage
				echo "Archiving $dir.tar.xz in `pwd`"
				tar \
				--exclude="$dir/.git" \
				--exclude="$dir/debian"  \
				--exclude="$dir/RCS" \
				-cf - $dir \
				| xz -c > $rpmbuild/SOURCES/$dir.tar.xz
				SRC="$rpmbuild/SOURCES/$dir.tar.xz $SRC"
				cd ..
				;;
		esac
		;;
	esac
done
echo "Copying permissions files and rpmlintrc"
for i in `get_non_tar_files indimail-auth/indimail-auth.spec`
do
	echo "/bin/cp -p indimail-auth/$i $rpmbuild/SOURCES"
	/bin/cp -p indimail-auth/$i $rpmbuild/SOURCES
	SRC="$rpmbuild/SOURCES/$i $SRC"
done
echo "Preparing indimail-auth"
dist=`uname -r |cut -d . -f4`
if [ $# -gt 0 ] ; then
	release=$1
else
	if [ -f /usr/sbin/nssd ] ; then
		ndist=$(rpm -qf /usr/sbin/nssd|cut -d- -f4|cut -d. -f4)
		if [ " $dist" = " $ndist" ] ; then
			nversion=$(rpm -qf /usr/sbin/nssd|cut -d- -f3)
			if [ "$nversion" = "$version" ] ; then
				release=$(rpm -qf /usr/sbin/nssd | cut -d- -f4 | cut -d. -f2)
				release=$(expr $release + 1)
			else
				release=1
			fi
		else
			release=1
		fi
	else
		release=1
	fi
fi
echo "Clearing stage directory"
/bin/rm -rf stage
echo -n "Build RPM for indimail-auth-"$version"-1."$release" (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	tmprel=`cat indimail-auth/conf-release 2>/dev/null`
	if [ -z "$temprel" -o ! " $tmprel" = " 1.$release" ] ; then
		echo 1.$release > indimail-auth/conf-release
		cd indimail-auth
		make indimail-auth.spec
		cp indimail-auth.spec /tmp
		cd debian
		make
		cd ../..
	else
		cp indimail-auth/indimail-auth.spec /tmp
	fi
	rpmbuild -ba --clean /tmp/indimail-auth.spec
	/bin/rm -f /tmp/indimail-auth.spec
	build_arch=`rpmbuild --showrc|grep "^build arch" | awk '{print $4}'`
	rpm --addsign $rpmbuild/RPMS/$build_arch/indimail-auth-"$version"-"1.$release".$dist.$build_arch.rpm
	rpm --addsign $rpmbuild/SRPMS/indimail-auth-"$version"-"1.$release".$dist.src.rpm
	echo -n "RPM lint for indimail-auth-"$version"-1."$release" (Y/N) - "
	read key
	if [ " $key" = " Y" -o " $key" = " y" ] ; then
		(
		echo indimail-auth
		rpmlint $rpmbuild/RPMS/$build_arch/indimail-auth-"$version"-"1.$release".$dist.$build_arch.rpm
		echo ------------------------
		echo indimail-auth-"$version"-"1.$release".$dist.src.rpm
		rpmlint $rpmbuild/SRPMS/indimail-auth-"$version"-"1.$release".$dist.src.rpm
		echo ------------------------
		) 2>&1 | less
	fi
fi
echo -n "Remove Source (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	for i in $SRC
	do
		echo "/bin/rm -f $i"
		/bin/rm -f $i
	done
fi
