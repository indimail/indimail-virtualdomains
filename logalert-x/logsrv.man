.\" vim: tw=75
.LL 8i
.TH logsrv 8
.SH NAME
logsrv \- receive log messages

.SH SYNOPSYS
\fBlogsrv\fR [-v] [-c ctimeout] [-d dtimeout [-r \fIloghost\fR] \fIstatusdir\fR

.SH DESCRIPTION
\fBlogsrv\fR(8) is a log server which can be run under \fBtcpserver\fR(1)
on logsrv port 6340. \fBlogsrv\fR(8) can receive messages from multiple log
message clients like \fBlogclient\fR(1). The log message protocol is
simple. The first line is always the hostname on which the log message
client runs and subsequent lines are log messages. \fBlogsrv\fR(8) receives
these messages with the filename and unique serial number prefixed to each
log message. You can use the -v option to have these messages written to
descriptor 2.

For each client from which log messages are received, \fBlogsrv\fR creates
a status file named \fIhostname\fR.status in \fIstatusdir\fR. The status
file contains the pid and the bytes accumulated from the client represented
by \fIhostname\fR. The byte position in this status file can be displayed
by \fBshowbytes\fR(1).

\fBlogsrv\fR(8) can relay messages to an RPC based log server \fBrpclog\fR(8)
using the -r option.

.SH OPTIONS
.TP 3
\fB\-v\fR
Run verbose. This option prints the log messages on descriptor 2.

.TP
\fB\-d\fR \fIdtimeout\fR
Use \fIdtimeout\fR as the timeout for sending acknowledgement to
\fBlogclient\fR(1).

.TP
\fB\-r\fR \fIloghost\fR
Apart from writing received log messages to standard out, send the message
to a remote RPC message log server \fBrpclog\fR(8) for secure storage.

.SH RETURN VALUE
0 if all steps were successful, non-zero otherwise. If any of the steps
fail, a diagnostic message is printed.

.SH "SEE ALSO"
rpclog(8), incrmesg(1), logclient(1), supervise(8), rpcbind(8), rpclog(8)
