#!/bin/sh
# postinst script for indimail
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

prefix=@prefix@
version=@version@
mandir=@mandir@
libexecdir=@libexecdir@
servicedir=/service
sysconfdir=@sysconfdir@
cp=/bin/cp
rm=/bin/rm
mv=/bin/mv
####################################

setperm()
{
	local user="$1"; shift
	local group="$1"; shift
	local mode="$1"; shift
	local file="$1"; shift
	/usr/sbin/dpkg-statoverride --list "$file" >/dev/null && return 0
	/usr/sbin/dpkg-statoverride --update --add "$user" "$group" "$mode" "$file"
}

fixperms()
{
#%attr(0555,root,qmail) @prefix@/bin/rsmtp
	if [ $# -eq 3 ] ; then # directory
		lin=$2
		file=$3
		if [ ! -d $file ] ; then
			return 0
		fi
	elif [ $# = 2 ] ; then # file
		lin=$1
		file=$2
		if [ ! -f $file ] ; then
			return 0
		fi
	fi
	perm=`echo $lin|cut -d\( -f2 | cut -d, -f1`
	perm_f1=`echo $perm | cut -c1`
	own=`echo $lin|cut -d\( -f2 | cut -d, -f2`
	grp=`echo $lin|cut -d\( -f2 | cut -d, -f3|cut -d\) -f1`
	/usr/bin/getent group $grp > /dev/null || grp="mail"
	if [ -f $file ] ; then
		if [ $perm_f1 -eq 0 ] ; then # perm_f1 is 4755, 0644
			/bin/chmod $perm $file
			/bin/chown $own:$grp $file
		else
			echo $file
			if [ -f /usr/sbin/dpkg-statoverride ] ; then
				setperm $own $grp $perm $file
			else
				/bin/chown $own:$grp $file
				/bin/chmod $perm $file
			fi
		fi
	elif [ -d $file ] ; then
		/bin/chown $own:$grp $file
		/bin/chmod $perm $file
	fi
}

ID=`id -u`
if [ $ID -ne 0 ] ; then
	echo "You are not root" >&2
	exit 1
fi

case "$1" in
    configure)
		if [ " $2" = " " ] ; then
		echo "installing indimail-spamfilter @version@"
		else
		echo "upgrading to indimail-spamfilter $2"
		fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	exit 0
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

#
# We need to do this for debian. SIGH!!
#
if [ -f ${sysconfdir}/perm_list.bogofilter ] ; then
	echo "Fixing Permissions"
	(
	/bin/grep -v "^#" ${sysconfdir}/perm_list.bogofilter | while read line
	do
		if [ " $line" = " " ] ; then
			continue
		fi
		fixperms $line
	done
	) > ${sysconfdir}/bogofilter-stat.override
fi

# Recreate ld.so links and cache
if [ ! "${prefix}" = "/usr" ] ; then
  /sbin/ldconfig
fi

if [ -x /bin/touch ] ; then
  TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
  TOUCH=/usr/bin/touch
else
  TOUCH=/bin/touch
fi
if [ -d /run ] ; then
  logfifo="/run/indimail/logfifo"
elif [ -d /var/run ] ; then
  logfifo="/var/run/indimail/logfifo"
else
  logfifo="/tmp/logfifo"
fi

# SMTP
# Configure SPAMFILTER, LOGFILTER
for port in 465 25
do
  if [ ! -d ${servicedir}/qmail-smtpd.$port ] ; then
    continue
  fi
  if [ -f ${servicedir}/qmail-smtpd.$port/variables/QMAILQUEUE ] ; then
    mv ${servicedir}/qmail-smtpd.$port/variables/QMAILQUEUE \
      ${servicedir}/qmail-smtpd.$port/variables/SPAMQUEUE 
    if [ $? -eq 0 ] ; then
      echo "${prefix}/sbin/qmail-spamfilter" > ${servicedir}/qmail-smtpd.$port/variables/QMAILQUEUE
    fi
  fi
  # update SPAMFILTER and also change .options, so that refreshsvc doesn't lose the settings
  if [ ! -f ${servicedir}/qmail-smtpd.$port/variables/SPAMFILTER ] ; then
    echo "${prefix}/bin/bogofilter -p -d ${sysconfdir}" > ${servicedir}/qmail-smtpd.$port/variables/SPAMFILTER
  elif [ ! -s ${servicedir}/qmail-smtpd.$port/variables/SPAMFILTER ] ; then
    echo "${prefix}/bin/bogofilter -p -d ${sysconfdir}" > ${servicedir}/qmail-smtpd.$port/variables/SPAMFILTER
  fi
  if [ ! -f ${servicedir}/qmail-smtpd.$port/variables/SPAMEXITCODE ] ; then
    echo 0 > ${servicedir}/qmail-smtpd.$port/variables/SPAMEXITCODE
  fi
  if [ ! -f ${servicedir}/qmail-smtpd.$port/variables/REJECTSPAM ] ; then
    echo 0 > ${servicedir}/qmail-smtpd.$port/variables/REJECTSPAM
  fi
  if [ ! -f ${servicedir}/qmail-smtpd.$port/variables/MAKESEEKABLE ] ; then
    echo 1 > ${servicedir}/qmail-smtpd.$port/variables/MAKE_SEEKABLE
  elif [ ! -s ${servicedir}/qmail-smtpd.$port/variables/MAKESEEKABLE ] ; then
    echo 1 > ${servicedir}/qmail-smtpd.$port/variables/MAKE_SEEKABLE
  fi
  if [ ! -f ${servicedir}/qmail-smtpd.$port/variables/LOGFILTER ] ; then
    echo $logfifo > ${servicedir}/qmail-smtpd.$port/variables/LOGFILTER
  fi
  bogo=$(grep bogofilter ${servicedir}/qmail-smtpd.$port/variables/.options > /dev/null 2>&1 || true)
  if [ -z "$bogo" ] ; then
    options="`cat ${servicedir}/qmail-smtpd.$port/variables/.options`"
    options="$options --spamfilter=\"${prefix}/bin/bogofilter -p -d ${sysconfdir}\""
    options="$options --logfilter=\"$logfifo\" --rejectspam=\"0\" --spamexitcode=\"0\""
    if [ -f ${servicedir}/qmail-smtpd.$port/variables/.options ] ; then
      ${mv} ${servicedir}/qmail-smtpd.$port/variables/.options \
        ${servicedir}/qmail-smtpd.$port/variables/.options.nospamfilter
    fi
    echo $options > ${servicedir}/qmail-smtpd.$port/variables/.options
  fi
done
if [ -d ${servicedir}/fetchmail ] ; then
  if [ -f ${servicedir}/fetchmail/variables/QMAILQUEUE ] ; then
    mv ${servicedir}/fetchmail/variables/QMAILQUEUE \
      ${servicedir}/fetchmail/variables/SPAMQUEUE 
    if [ $? -eq 0 ] ; then
      echo "${prefix}/sbin/qmail-spamfilter" > ${servicedir}/fetchmail/variables/QMAILQUEUE
    fi
  fi
  # update SPAMFILTER and also change .options, so that refreshsvc doesn't lose the settings
  if [ ! -f $servicedir}/fetchmail/variables/SPAMFILTER ] ; then
    echo "${prefix}/bin/bogofilter -p -d ${sysconfdir}" > ${servicedir}/fetchmail/variables/SPAMFILTER
  elif [ ! -s ${servicedir}/fetchmail/variables/SPAMFILTER ] ; then
    echo "${prefix}/bin/bogofilter -p -d ${sysconfdir}" > ${servicedir}/fetchmail/variables/SPAMFILTER
  fi
  if [ ! -f ${servicedir}/fetchmail/variables/SPAMEXITCODE ] ; then
    echo 0 > ${servicedir}/fetchmail/variables/SPAMEXITCODE
  fi
  if [ ! -f ${servicedir}/fetchmail/variables/REJECTSPAM ] ; then
    echo 0 > ${servicedir}/fetchmail/variables/REJECTSPAM
  fi
  if [ ! -f ${servicedir}/fetchmail/variables/MAKESEEKABLE ] ; then
    echo 1 > ${servicedir}/fetchmail/variables/MAKE_SEEKABLE
  elif [ ! -s ${servicedir}/fetchmail/variables/MAKESEEKABLE ] ; then
    echo 1 > ${servicedir}/fetchmail/variables/MAKE_SEEKABLE
  fi
  if [ ! -f ${servicedir}/fetchmail/variables/LOGFILTER ] ; then
    echo $logfifo > ${servicedir}/fetchmail/variables/LOGFILTER
  fi
  bogo=$(grep bogofilter ${servicedir}/fetchmail/variables/.options > /dev/null 2>&1 || true)
  if [ -z "$bogo" ] ; then
    options="`cat ${servicedir}/fetchmail/variables/.options`"
    options="$options --spamfilter=\"${prefix}/bin/bogofilter -p -d ${sysconfdir}\""
    options="$options --logfilter=\"$logfifo\" --rejectspam=\"0\" --spamexitcode=\"0\""
    if [ -f ${servicedir}/fetchmail/variables/.options ] ; then
      ${mv} ${servicedir}/fetchmail/variables/.options \
        ${servicedir}/fetchmail/variables/.options.nospamfilter
    fi
    echo $options > ${servicedir}/fetchmail/variables/.options
  fi
fi

#
# bogofilter configuration
#
if [ -d ${sysconfdir} -a -x ${prefix}/sbin/svctool ] ; then
  ${prefix}/sbin/svctool --config=bogofilter
fi
exit 0
