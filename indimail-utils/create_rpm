#!/bin/sh
version=$(head -1 conf-version)
altermime_version=$(cat ../altermime-x/conf-version)
ripmime_version=$(cat ../ripmime-x/conf-version)
fortune_version=$(cat ../fortune-x/conf-version)
flash_version=$(cat ../flash-x/conf-version)
mpack_version=$(cat ../mpack-x/conf-version)

get_tar_files()
{
(
for i in `grep "^Source" indimail-utils/indimail-utils.spec | awk '{print $2}' | grep "\.tar"`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/indimail/g' \
	-e "s/%{version}/$version/g" \
	-e "s/%{altermime_version}/$altermime_version/g" \
	-e "s/%{ripmime_version}/$ripmime_version/g" \
	-e "s/%{flash_version}/$flash_version/g" \
	-e "s/%{mpack_version}/$mpack_version/g" \
	-e "s/%{fortune_version}/$fortune_version/g" \
	-e "s/%{nssd_version}/$nssd_version/g"
}

get_non_tar_files()
{
(
for i in `grep "^Source" $1 | grep -v "\.tar" | awk '{print $2}'`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/indimail/g' \
	-e "s/%{version}/$version/g" \
	-e "s/%{altermime_version}/$altermime_version/g" \
	-e "s/%{ripmime_version}/$ripmime_version/g" \
	-e "s/%{flash_version}/$flash_version/g" \
	-e "s/%{mpack_version}/$mpack_version/g" \
	-e "s/%{fortune_version}/$fortune_version/g" \
	-e "s/%{nssd_version}/$nssd_version/g"
}

get_dirname()
{
	echo $1 | sed \
		-e 's}.tar.gz}}g' \
		-e 's}.tar.bz2}}g' \
		-e 's}.tar.xz}}g'
}

verbose=0
while test $# -gt 0; do
    case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
    *) optarg=
	;;
    esac

    case "$1" in
    --verbose)
	verbose=1
    ;;
    --release=*)
	release=$optarg
    ;;
    *)
    echo "invalid option [$1]"
    read key
    usage 1
    ;;
    esac

    shift
done

if test -f $HOME/.rpmmacros
then
	topdir=`grep ^%_topdir $HOME/.rpmmacros | awk '{print $2}'`
	if test -n "$topdir"
	then
		rpmbuild=$topdir
	else
		rpmbuild=$HOME/rpmbuild
	fi
else
	rpmbuild=$HOME/rpmbuild
fi
copy_src=0
echo -n "Copy Source Files - "
read key
if [ " $key" = " y" -o " $key" = " Y" ] ; then
	copy_src=1
fi

make -s indimail-utils.spec
if [ $? -ne 0 ] ; then
	echo "make failed" 1>&2
	exit 0
fi
if [ -d ../stage ] ; then
	/bin/rm -rf ../stage
fi
if [ $copy_src -eq 1 ] ; then
	if [ -d ../stage ] ; then
		/bin/rm -rf ../stage
	fi
	mkdir ../stage
	cd ..
	list=`get_tar_files`
	for i in $list
	do
		echo "Versioning $i"
		dir=`echo $i|cut -d- -f1`
		if [ ! -d $dir-x ] ; then
			echo "$dir-x: No such file or directory" 1>&2
			exit 1
		fi
		case "$dir" in
			altermime)
			package_version=$altermime_version
			;;
			ripmime)
			package_version=$ripmime_version
			;;
			flash)
			package_version=$flash_version
			;;
			fortune)
			package_version=$fortune_version
			;;
			mpack)
			package_version=$mpack_version
			;;
		esac
		/bin/cp -rp "$dir"-x stage/$dir-"$package_version"
		/bin/cp -p indimail-utils/indimail-utils-rpmlintrc stage
		cd stage/$dir-"$package_version"
		echo "Cleaning $dir-$package_version"
		make -s clean > /dev/null
		make -s distclean > /dev/null
		/bin/rm -rf autom4te.cache .deps
		cd ..
		echo "Archiving $dir-$package_version.tar.gz in `pwd`"
		tar \
			--exclude="$dir"-"$package_version"/.git \
			--exclude="$dir"-"$package_version"/debian  \
			--exclude="$dir"-"$package_version"/RCS \
			-cf - $dir-$package_version \
			| gzip -c > $rpmbuild/SOURCES/"$dir"-"$package_version".tar.gz
		SRC="$rpmbuild/SOURCES/"$dir"-"$package_version".tar.gz $SRC"
		cd ..
	done
	echo "Copying permissions files and rpmlintrc"
	for i in `get_non_tar_files indimail-utils/indimail-utils.spec`
	do
		echo "/bin/cp -p stage/$i $rpmbuild/SOURCES"
		/bin/cp -p stage/$i $rpmbuild/SOURCES
		SRC="$rpmbuild/SOURCES/$i $SRC"
	done
	echo "Clearing stage directory"
	/bin/rm -rf stage
else
	cd ..
fi
echo "Preparing indimail-utils-"$version""
dist=`uname -r |cut -d . -f4`
if [ -z "$release" ] ; then
	if [ -f /usr/bin/altermime ] ; then
		idist=$(rpm -qf /usr/bin/altermime|cut -d- -f4|cut -d. -f3)
		if [ " $dist" = " $idist" ] ; then
			iversion=$(rpm -qf /usr/bin/altermime|cut -d- -f3)
			if [ "$iversion" = "$version" ] ; then
				release=$(rpm -qf /usr/bin/altermime | cut -d- -f4 | cut -d. -f2)
				release=$(expr $release + 1)
			else
				release=1
			fi
		else
			release=1
		fi
	else
		release=1
	fi
fi
echo -n "Build RPM for indimail-utils-"$version"-1."$release" (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	tmprel=`cat indimail-utils/conf-release 2>/dev/null`
	if [ ! " $tmprel" = " 1.$release" ] ; then
		echo 1.$release > indimail-utils/conf-release
		cd indimail-utils
		make indimail-utils.spec
		cp indimail-utils.spec /tmp
		cd debian
		make
		cd ../..
	else
		cp indimail-utils/indimail-utils.spec /tmp
	fi
	if [ $verbose -eq 0 ] ; then
		echo "rpmbuild -ba --clean --quiet /tmp/indimail-utils.spec"
		rpmbuild -ba --clean --quiet /tmp/indimail-utils.spec
	else
		echo "rpmbuild -ba --clean /tmp/indimail-utils.spec"
		rpmbuild -ba --clean /tmp/indimail-utils.spec
	fi
	/bin/rm -f /tmp/indimail-utils.spec
	build_arch=`rpmbuild --showrc|grep "^build arch" | awk '{print $4}'`
	rpm --addsign $rpmbuild/RPMS/$build_arch/indimail-utils-"$version"-"1.$release".$dist.$build_arch.rpm
	rpm --addsign $rpmbuild/SRPMS/indimail-utils-"$version"-"1.$release".$dist.src.rpm
	echo -n "RPM lint for indimail-utils-"$version"-1."$release" (Y/N) - "
	read key
	if [ " $key" = " Y" -o " $key" = " y" ] ; then
		(
		echo indimail-utils
		rpmlint $rpmbuild/RPMS/$build_arch/indimail-utils-"$version"-"1.$release".$dist.$build_arch.rpm
		echo ------------------------
		echo indimail-utils-"$version"-"1.$release".$dist.src.rpm
		rpmlint $rpmbuild/SRPMS/indimail-utils-"$version"-"1.$release".$dist.src.rpm
		echo ------------------------
		) 2>&1 | less
	fi
fi
echo -n "Remove Source (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	for i in $SRC
	do
		echo "/bin/rm -f $i"
		/bin/rm -f $i
	done
fi
